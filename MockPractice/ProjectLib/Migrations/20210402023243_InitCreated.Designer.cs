// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectLib;

namespace ProjectLib.Migrations
{
    [DbContext(typeof(ProjectLibDbContext))]
    [Migration("20210402023243_InitCreated")]
    partial class InitCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectLib.Object.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birthday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BirthPlace = "Hai Phong",
                            Birthday = "18/12/2001",
                            Email = "asd12@gmail.com",
                            Gender = "Male",
                            Name = "Truong Cong Vinh",
                            Phone = "0123654789"
                        },
                        new
                        {
                            ID = 2,
                            BirthPlace = "Ha Noi",
                            Birthday = "18/12/2000",
                            Email = "asd2@gmail.com",
                            Gender = "Male",
                            Name = "Truong Cong Minh",
                            Phone = "0123654789"
                        },
                        new
                        {
                            ID = 3,
                            BirthPlace = "Hai Phong",
                            Birthday = "18/12/1999",
                            Email = "asd3@gmail.com",
                            Gender = "Male",
                            Name = "Truong Cong Tuan",
                            Phone = "0123654789"
                        },
                        new
                        {
                            ID = 4,
                            BirthPlace = "Ha Noi",
                            Birthday = "18/12/1998",
                            Email = "asd4@gmail.com",
                            Gender = "Male",
                            Name = "Truong Cong Tu",
                            Phone = "0123654789"
                        },
                        new
                        {
                            ID = 5,
                            BirthPlace = "Ha Nam",
                            Birthday = "18/12/2000",
                            Email = "asd5@gmail.com",
                            Gender = "Male",
                            Name = "Truong Cong Duc",
                            Phone = "0123654789"
                        });
                });

            modelBuilder.Entity("ProjectLib.Object.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("ProjectLib.Object.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Password = "123",
                            RoleID = 1,
                            Username = "Admin"
                        },
                        new
                        {
                            UserID = 2,
                            Password = "123",
                            RoleID = 2,
                            Username = "User"
                        });
                });

            modelBuilder.Entity("ProjectLib.Object.User", b =>
                {
                    b.HasOne("ProjectLib.Object.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProjectLib.Object.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
